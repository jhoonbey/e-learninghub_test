@model  Blog


<div class="row-fluid sortable">
    <div class="box span12">
        <div class="box-header well" data-original-title>
            <h2><i class="icon icon-red icon-plus"></i>New Article</h2>
        </div>
        <div class="box-content">
            @using (Html.BeginForm("Create", "Blogs", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
            {
                <fieldset>
                    <div class="control-group">
                        <label class="control-label" for="focusedInput">Category</label>
                        <div class="controls">
                            @Html.DropDownListFor(model => model.CategoryId, ViewBag.Categories as IEnumerable<SelectListItem>, "-", new { data_rel = "chosen", @id = "categoryId", @style = "" })
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="focusedInput">Sub Category</label>
                        <div class="controls">
                            @Html.DropDownListFor(model => model.SubCategoryId, ViewBag.SubCategories as IEnumerable<SelectListItem>, "-", new { data_rel = "chosen", @id = "subCategoryId", @style = "" })
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="focusedInput">Sub of Sub Category</label>
                        <div class="controls">
                            @Html.DropDownListFor(model => model.SubSubCategoryId, ViewBag.SubSubCategories as IEnumerable<SelectListItem>, "-", new { data_rel = "chosen", @id = "subSubCategoryId", @style = "" })
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="focusedInput">Name</label>
                        <div class="controls">
                            @Html.TextBoxFor(model => model.Name, new { @style = "width: 80%;" })
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="focusedInput">Description</label>
                        <div class="controls">
                            @Html.TextAreaFor(model => model.Description, new { @class = "cleditor" })
                        </div>
                    </div>
                    @*<div class="control-group">
                            <label class="control-label" for="focusedInput">TabTitle</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.TabTitle, new { @class = "cleditor" })
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">Name (EN)</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.NameEN, new { @style = "width: 80%;" })
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">Description (EN)</label>
                            <div class="controls">
                                @Html.TextAreaFor(model => model.DescriptionEN, new { @class = "cleditor" })
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">TabTitle (EN)</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.TabTitleEN, new { @class = "cleditor" })
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">Name (TR)</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.NameTR, new { @style = "width: 80%;" })
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">Description (TR)</label>
                            <div class="controls">
                                @Html.TextAreaFor(model => model.DescriptionTR, new { @class = "cleditor" })
                            </div>
                        </div>*@
                    @*<div class="control-group">
                            <label class="control-label" for="focusedInput">Name (RU)</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.NameRU, new { @style = "width: 80%;" })
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">Description (RU)</label>
                            <div class="controls">
                                @Html.TextAreaFor(model => model.DescriptionRU, new { @class = "cleditor" })
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="focusedInput">TabTitle (RU)</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.TabTitleRU, new { @class = "cleditor" })
                            </div>
                        </div>*@
                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <a class="btn" href="@Url.Action("List", "Blogs")">Cancel</a>
                    </div>
                </fieldset>
            }
        </div>
    </div>
</div>


<script>
        jQuery(document).ready(function () {
            $("#categoryId").chosen();
            $("#subCategoryId").chosen();
            $("#subSubCategoryId").chosen();


            $("#categoryId").change(function () {
                loadLevelTwo(this, $('#subCategoryId'), '@Url.Action("LoadSubCategoriesByCategoryId", "SubCategories")');
            });
            loadLevelTwo(this, $('#subCategoryId'), '@Url.Action("LoadSubCategoriesByCategoryId", "SubCategories")');

            $("#subCategoryId").change(function () {
                loadLevelTwo(this, $('#subSubCategoryId'), '@Url.Action("LoadSubSubCategoriesByCategoryId", "SubSubCategories")');
            });
            loadLevelTwo(this, $('#subSubCategoryId'), '@Url.Action("LoadSubSubCategoriesByCategoryId", "SubSubCategories")');


        function loadLevelTwo(parent, child, urll) {
            var selectedId = $(parent).val();

            $.ajax(
            {
                url: urll,
                type: "GET",
                data: { parentId: selectedId },
                error:
                //function (xhr) {
                //    alert(xhr);
                //    alert("Something went wrong, please try again");
                //}
                function (xhr, status, error) {
                    var err = eval("(" + xhr.responseText + ")");
                    alert(err.Message);
                }
            }).done(function (data) {
                $(child).children().each(function (index, option) {
                    $(option).remove();
                });
                var items = "<option selected value=\"\"></option>";
                $.each(data,
                    function (i, item) {
                        items += "<option value=\"" + item.Id + "\">" + item.Name + "</option>";
                    });

                $(child).html(items);
                $(child).trigger("liszt:updated");
                //$(child).trigger("chosen:updated");
                $(child).trigger("change");
                $(child).change();

            });
            }

        });
</script>